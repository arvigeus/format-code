{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "empty-module:~/components/CodeEditor.client", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/root.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/meta/site[.]webmanifest.ts", "../app/themes.ts", "../app/session.server.ts", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/styles/editor[.]css.ts", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/styles/theme[.]css.ts", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/toggleTheme.ts", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/index.tsx", "../app/lib/meta.tsx", "../app/components/Panel.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/postgresql.tsx", "../app/routes/lang.tsx", "../app/hooks/useSqlFormatter.ts", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/mariadb.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/json5.tsx", "../app/hooks/usePrettier.ts", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/mysql.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/plsql.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/html.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/json.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/less.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/scss.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/tsql.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/yaml.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/css.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/gql.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/jsx.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/mdx.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/sql.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/tsx.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/xml.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/js.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/md.tsx", "/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/ts.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/entry.server.tsx\";\nimport * as route0 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/root.tsx\";\nimport * as route1 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/meta/site[.]webmanifest.ts\";\nimport * as route2 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/styles/editor[.]css.ts\";\nimport * as route3 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/styles/theme[.]css.ts\";\nimport * as route4 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/toggleTheme.ts\";\nimport * as route5 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/index.tsx\";\nimport * as route6 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang.tsx\";\nimport * as route7 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/postgresql.tsx\";\nimport * as route8 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/mariadb.tsx\";\nimport * as route9 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/json5.tsx\";\nimport * as route10 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/mysql.tsx\";\nimport * as route11 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/plsql.tsx\";\nimport * as route12 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/html.tsx\";\nimport * as route13 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/json.tsx\";\nimport * as route14 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/less.tsx\";\nimport * as route15 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/scss.tsx\";\nimport * as route16 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/tsql.tsx\";\nimport * as route17 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/yaml.tsx\";\nimport * as route18 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/css.tsx\";\nimport * as route19 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/gql.tsx\";\nimport * as route20 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/jsx.tsx\";\nimport * as route21 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/mdx.tsx\";\nimport * as route22 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/sql.tsx\";\nimport * as route23 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/tsx.tsx\";\nimport * as route24 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/xml.tsx\";\nimport * as route25 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/js.tsx\";\nimport * as route26 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/md.tsx\";\nimport * as route27 from \"/var/home/arvigeus/Workspace/arvigeus/format-code/app/routes/lang/ts.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/meta/site[.]webmanifest\": {\n      id: \"routes/meta/site[.]webmanifest\",\n      parentId: \"root\",\n      path: \"meta/site.webmanifest\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/styles/editor[.]css\": {\n      id: \"routes/styles/editor[.]css\",\n      parentId: \"root\",\n      path: \"styles/editor.css\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/styles/theme[.]css\": {\n      id: \"routes/styles/theme[.]css\",\n      parentId: \"root\",\n      path: \"styles/theme.css\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/toggleTheme\": {\n      id: \"routes/toggleTheme\",\n      parentId: \"root\",\n      path: \"toggleTheme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/lang\": {\n      id: \"routes/lang\",\n      parentId: \"root\",\n      path: \"lang\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/lang/postgresql\": {\n      id: \"routes/lang/postgresql\",\n      parentId: \"routes/lang\",\n      path: \"postgresql\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/lang/mariadb\": {\n      id: \"routes/lang/mariadb\",\n      parentId: \"routes/lang\",\n      path: \"mariadb\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/lang/json5\": {\n      id: \"routes/lang/json5\",\n      parentId: \"routes/lang\",\n      path: \"json5\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/lang/mysql\": {\n      id: \"routes/lang/mysql\",\n      parentId: \"routes/lang\",\n      path: \"mysql\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/lang/plsql\": {\n      id: \"routes/lang/plsql\",\n      parentId: \"routes/lang\",\n      path: \"plsql\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/lang/html\": {\n      id: \"routes/lang/html\",\n      parentId: \"routes/lang\",\n      path: \"html\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/lang/json\": {\n      id: \"routes/lang/json\",\n      parentId: \"routes/lang\",\n      path: \"json\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/lang/less\": {\n      id: \"routes/lang/less\",\n      parentId: \"routes/lang\",\n      path: \"less\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/lang/scss\": {\n      id: \"routes/lang/scss\",\n      parentId: \"routes/lang\",\n      path: \"scss\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/lang/tsql\": {\n      id: \"routes/lang/tsql\",\n      parentId: \"routes/lang\",\n      path: \"tsql\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/lang/yaml\": {\n      id: \"routes/lang/yaml\",\n      parentId: \"routes/lang\",\n      path: \"yaml\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/lang/css\": {\n      id: \"routes/lang/css\",\n      parentId: \"routes/lang\",\n      path: \"css\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/lang/gql\": {\n      id: \"routes/lang/gql\",\n      parentId: \"routes/lang\",\n      path: \"gql\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/lang/jsx\": {\n      id: \"routes/lang/jsx\",\n      parentId: \"routes/lang\",\n      path: \"jsx\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/lang/mdx\": {\n      id: \"routes/lang/mdx\",\n      parentId: \"routes/lang\",\n      path: \"mdx\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/lang/sql\": {\n      id: \"routes/lang/sql\",\n      parentId: \"routes/lang\",\n      path: \"sql\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/lang/tsx\": {\n      id: \"routes/lang/tsx\",\n      parentId: \"routes/lang\",\n      path: \"tsx\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/lang/xml\": {\n      id: \"routes/lang/xml\",\n      parentId: \"routes/lang\",\n      path: \"xml\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/lang/js\": {\n      id: \"routes/lang/js\",\n      parentId: \"routes/lang\",\n      path: \"js\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/lang/md\": {\n      id: \"routes/lang/md\",\n      parentId: \"routes/lang\",\n      path: \"md\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/lang/ts\": {\n      id: \"routes/lang/ts\",\n      parentId: \"routes/lang\",\n      path: \"ts\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    }\n  };", "import { renderToString } from \"react-dom/server\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\n\nif (!process.env.COOKIE_SECRET)\n  throw new Error(\"Missing `COOKIE_SECRET` environment variable\");\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LinksFunction } from \"@remix-run/node\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, useCatch } from \"@remix-run/react\";\n\nimport globalStylesUrl from \"~/build/styles/global.css\";\nimport panelStylesUrl from \"~/build/styles/panel.css\";\n\n// https://remix.run/api/app#links\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: \"/styles/theme.css\",\n    },\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    { rel: \"stylesheet\", href: panelStylesUrl },\n  ];\n};\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n        </div>\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }: { children: React.ReactNode }) {\n  return <main>{children}</main>;\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\n\nimport type { ThemeVariant } from \"~/themes\";\nimport { themeColors } from \"~/themes\";\nimport { getSession } from \"~/session.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const url = new URL(request.url);\n\n  const variant: ThemeVariant = session.get(\"theme\") || \"light\";\n  const theme = themeColors[variant];\n\n  const name = url.searchParams.get(\"name\") || \"code\";\n\n  const manifest = {\n    name: name,\n    short_name: name,\n    icons: [\n      {\n        src: `/favicons/${name}/android-chrome-192x192.png`,\n        sizes: \"192x192\",\n        type: \"image/png\",\n      },\n      {\n        src: `/favicons/${name}/android-chrome-512x512.png`,\n        sizes: \"512x512\",\n        type: \"image/png\",\n      },\n    ],\n    theme_color: theme.foreground,\n    background_color: theme.background,\n    display: \"standalone\",\n  };\n\n  return new Response(JSON.stringify(manifest), {\n    headers: {\n      \"Content-Type\": \"text/webmanifest\",\n    },\n  });\n};\n", "export type ThemeVariant = \"light\" | \"dark\";\n\nexport type Theme = {\n  foreground: string;\n  background: string;\n};\n\nexport type EditorTheme = {\n  selection: string;\n  cursor: string;\n  dropdownBackground: string;\n  dropdownBorder: string;\n  activeLine: string;\n  matchingBracket: string;\n  keyword: string;\n  storage: string;\n  variable: string;\n  parameter: string;\n  function: string;\n  string: string;\n  constant: string;\n  type: string;\n  class: string;\n  number: string;\n  comment: string;\n  heading: string;\n  invalid: string;\n  regexp: string;\n  lineNumber: string;\n};\n\nexport const themeColors: Record<ThemeVariant, Theme> = {\n  light: {\n    foreground: \"#0066b8\",\n    background: \"#e3eaf1\",\n  },\n  dark: {\n    foreground: \"#fff\",\n    background: \"#2f2f2f\",\n  },\n};\n\nexport const editorColors: Record<ThemeVariant, EditorTheme> = {\n  light: {\n    selection: \"#80CBC440\",\n    cursor: \"#272727\",\n    dropdownBackground: \"#FAFAFA\",\n    dropdownBorder: \"#00000010\",\n    activeLine: \"#CCD7DA50\",\n    matchingBracket: \"#FAFAFA\",\n    keyword: \"#39ADB5\",\n    storage: \"#39ADB5\",\n    variable: \"#90A4AE\",\n    parameter: \"#90A4AE\",\n    function: \"#6182B8\",\n    string: \"#91B859\",\n    constant: \"#39ADB5\",\n    type: \"#E2931D\",\n    class: \"#E2931D\",\n    number: \"#F76D47\",\n    comment: \"#90A4AE\",\n    heading: \"#39ADB5\",\n    invalid: \"#E5393570\",\n    regexp: \"#91B859\",\n    lineNumber: \"#999\",\n  },\n  dark: {\n    selection: \"#80CBC420\",\n    cursor: \"#FFCC00\",\n    dropdownBackground: \"#2f2f2f\",\n    dropdownBorder: \"#FFFFFF10\",\n    activeLine: \"#00000050\",\n    matchingBracket: \"#2f2f2f\",\n    keyword: \"#89DDFF\",\n    storage: \"#89DDFF\",\n    variable: \"#EEFFFF\",\n    parameter: \"#EEFFFF\",\n    function: \"#82AAFF\",\n    string: \"#C3E88D\",\n    constant: \"#89DDFF\",\n    type: \"#FFCB6B\",\n    class: \"#FFCB6B\",\n    number: \"#F78C6C\",\n    comment: \"#546E7A\",\n    heading: \"#89DDFF\",\n    invalid: \"#f0717870\",\n    regexp: \"#C3E88D\",\n    lineNumber: \"#999\",\n  },\n};\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\n// - https://remix.run/api/remix#createcookiesessionstorage\nlet { commitSession, destroySession, getSession } = createCookieSessionStorage({\n  cookie: {\n    path: \"/\",\n    httpOnly: true,\n    secure: process.env.NODE_ENV !== \"development\",\n    secrets: [process.env.COOKIE_SECRET],\n    maxAge: Number.MAX_SAFE_INTEGER,\n  },\n});\n\nexport { commitSession, destroySession, getSession };\n", "import type { LoaderFunction } from \"@remix-run/node\";\n\nimport type { ThemeVariant } from \"~/themes\";\nimport { editorColors } from \"~/themes\";\nimport { getSession } from \"~/session.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let session = await getSession(request.headers.get(\"Cookie\"));\n\n  const variant: ThemeVariant = session.get(\"theme\") || \"light\";\n  const theme = editorColors[variant];\n\n  let css = \"\";\n\n  if (theme) {\n    const properties = Object.entries(theme).map(\n      ([property, color]) => `--color-editor-${property}: ${color};`\n    );\n\n    css = `:root {${properties.join(\"\")}}`;\n  }\n\n  return new Response(css, {\n    headers: {\n      \"Content-Type\": \"text/css\",\n    },\n  });\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\n\nimport type { ThemeVariant } from \"~/themes\";\nimport { themeColors } from \"~/themes\";\nimport { getSession } from \"~/session.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  const variant: ThemeVariant = session.get(\"theme\") || \"light\";\n  const theme = themeColors[variant];\n\n  let css = \"\";\n\n  if (theme) {\n    const properties = Object.entries(theme).map(\n      ([property, color]) => `--color-${property}: ${color};`\n    );\n\n    css = `:root {${properties.join(\"\")}}`;\n  }\n\n  return new Response(css, {\n    headers: {\n      \"Content-Type\": \"text/css\",\n    },\n  });\n};\n", "// https://www.ebey.me/blog/dynamic-css-with-remix-resource-routes\nimport type { ActionFunction } from \"@remix-run/node\";\n\nimport { json } from \"@remix-run/node\";\n\nimport type { ThemeVariant } from \"~/themes\";\nimport { editorColors, themeColors } from \"~/themes\";\nimport { getSession, commitSession } from \"~/session.server\";\n\nexport let action: ActionFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const variant: ThemeVariant =\n    session.get(\"theme\") === \"dark\" ? \"light\" : \"dark\";\n\n  session.set(\"theme\", variant);\n\n  const theme = themeColors[variant];\n  const editorTheme = editorColors[variant];\n\n  const css: Record<string, string> = {};\n\n  if (theme) {\n    for (const [prop, value] of Object.entries(theme))\n      css[`--color-${prop}`] = value;\n  }\n\n  if (editorTheme) {\n    for (const [prop, value] of Object.entries(editorTheme))\n      css[`--color-editor-${prop}`] = value;\n  }\n\n  css[\"minHeight\"] = \"100vh\";\n  css[\"backgroundColor\"] = \"var(--color-background)\";\n  css[\"color\"] = \"var(--color-foreground)\";\n\n  return json(css, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n", "import type { LinksFunction, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nimport { SimplePanel } from \"~/components/Panel\";\n\nimport stylesUrl from \"~/build/styles/home.css\";\n\ntype HomeData = Array<{ path: string; name: string }>;\n\nexport let loader: LoaderFunction = ({ request }) => {\n  let data: HomeData = [\n    { path: \"/lang/css\", name: \"CSS\" },\n    { path: \"/lang/gql\", name: \"GraphQL\" },\n    { path: \"/lang/html\", name: \"HTML\" },\n    { path: \"/lang/json\", name: \"JSON\" },\n    { path: \"/lang/json5\", name: \"JSON5\" },\n    { path: \"/lang/js\", name: \"JavaScript\" },\n    { path: \"/lang/less\", name: \"LESS\" },\n    { path: \"/lang/mariadb\", name: \"MariaDB\" },\n    { path: \"/lang/md\", name: \"Markdown\" },\n    { path: \"/lang/mdx\", name: \"MDX\" },\n    { path: \"/lang/mysql\", name: \"MySQL\" },\n    { path: \"/lang/plsql\", name: \"PL/SQL\" },\n    { path: \"/lang/postgresql\", name: \"PostgreSQL\" },\n    { path: \"/lang/jsx\", name: \"React\" },\n    { path: \"/lang/tsx\", name: \"React TypeScript\" },\n    { path: \"/lang/scss\", name: \"SCSS\" },\n    { path: \"/lang/sql\", name: \"SQL\" },\n    { path: \"/lang/tsql\", name: \"TSQL\" },\n    { path: \"/lang/ts\", name: \"TypeScript\" },\n    { path: \"/lang/xml\", name: \"XML\" },\n    { path: \"/lang/yaml\", name: \"YAML\" },\n  ];\n\n  // https://remix.run/api/remix#json\n  return json(data);\n};\n\n// https://remix.run/api/conventions#meta\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Code formatter\",\n    description: \"Easy and opinionated online code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: stylesUrl },\n    ...createLanguageManifest(\"code\"),\n  ];\n};\n\nexport default function Home() {\n  let data = useLoaderData<HomeData>();\n  const toggleTheme = useFetcher<Record<string, string>>();\n\n  const reloadDocument = !!toggleTheme.data;\n\n  return (\n    <div id=\"home\" style={toggleTheme.data}>\n      <h4># Available formatters:</h4>\n      <ul>\n        {data.map(({ path, name }) => (\n          <li key={name}>\n            <Link to={path} reloadDocument={reloadDocument}>\n              {name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <toggleTheme.Form method=\"post\" action=\"/toggleTheme\">\n        <SimplePanel busy={toggleTheme.state === \"submitting\"} />\n      </toggleTheme.Form>\n    </div>\n  );\n}\n", "export const createLanguageManifest = (name: string) => [\n  {\n    rel: \"icon\",\n    href: `/favicons/${name}/favicon.ico`,\n    sizes: \"any\",\n  },\n  {\n    rel: \"icon\",\n    href: `/favicons/${name}/favicon.ico`,\n    sizes: \"16x16\",\n  },\n  {\n    rel: \"icon\",\n    href: `/favicons/${name}/favicon.ico-32x32`,\n    sizes: \"32x32\",\n  },\n  {\n    rel: \"manifest\",\n    href: `/meta/site.webmanifest?name=${name}`,\n  },\n  {\n    rel: \"apple-touch-icon\",\n    href: `/favicons/${name}/apple-touch-icon.png`,\n  },\n];\n", "import { Link } from \"@remix-run/react\";\nimport { FaMagic } from \"react-icons/fa\";\nimport {\n  MdOutlineContentCopy,\n  MdOutlineBrightnessMedium,\n  MdOutlineHome,\n} from \"react-icons/md\";\nimport { VscGithub } from \"react-icons/vsc\";\n\ntype PanelProps = {\n  onFormat: () => void;\n  onCopyToClipboard: () => void;\n  reloadDocument: boolean;\n  busy: boolean;\n};\n\nexport default function Panel({\n  onFormat,\n  onCopyToClipboard,\n  reloadDocument,\n  busy,\n}: PanelProps) {\n  return (\n    <aside id=\"panel\">\n      <button type=\"button\" title=\"Format\" onClick={onFormat}>\n        <FaMagic size={24} />\n      </button>\n      <button\n        type=\"button\"\n        title=\"Copy to clipboard\"\n        onClick={onCopyToClipboard}\n      >\n        <MdOutlineContentCopy size={24} />\n      </button>\n      <button title=\"Toggle theme\" type=\"submit\" disabled={busy}>\n        <MdOutlineBrightnessMedium size={24} />\n      </button>\n      <Link to=\"/\" title=\"Go back\" reloadDocument={reloadDocument}>\n        <MdOutlineHome size={24} />\n      </Link>\n      <a\n        className=\"github\"\n        href=\"https://github.com/arvigeus/format-code\"\n        rel=\"noopener noreferrer\"\n      >\n        <VscGithub size={24} />\n      </a>\n    </aside>\n  );\n}\n\ntype SimplePanelProps = {\n  busy: boolean;\n};\n\nexport function SimplePanel({ busy }: SimplePanelProps) {\n  return (\n    <aside id=\"panel\">\n      <button title=\"Toggle theme\" type=\"submit\" disabled={busy}>\n        <MdOutlineBrightnessMedium size={24} />\n      </button>\n      <a\n        className=\"github\"\n        href=\"https://github.com/arvigeus/format-code\"\n        rel=\"noopener noreferrer\"\n      >\n        <VscGithub size={24} />\n      </a>\n    </aside>\n  );\n}\n", "// https://reactrouter.com/docs/en/v6/api#outlet\n// https://github.com/uiwjs/react-codemirror/blob/master/website/App.tsx\nimport { useState, useCallback, useRef } from \"react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport { Outlet, useFetcher, useOutletContext } from \"@remix-run/react\";\n\nimport Panel from \"~/components/Panel\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: \"/styles/editor.css\",\n    },\n  ];\n};\n\nexport type FormatterFunction = (text: string) => string;\n\nexport default function Format() {\n  const [code, setCode] = useState(\"\");\n  const value = useRef<string>(\"\");\n  const format = useRef<FormatterFunction>();\n  const toggleTheme = useFetcher<Record<string, string>>();\n\n  const setFormatter = useCallback((func: FormatterFunction) => {\n    format.current = func;\n  }, []);\n  const handleChange = useCallback((input: string) => {\n    value.current = input;\n  }, []);\n  const handleFormat = useCallback(() => {\n    if (!format.current || !value.current || value.current === code) return;\n    value.current = format.current(value.current);\n    if (value.current !== code) setCode(value.current);\n    else {\n      // Edge case: Only formatting was changed (this would not trigger re-render)\n      // Use a dummy value to force update code\n      setCode(value.current + \" \");\n      // Then use delay to immidiately correct it\n      setTimeout(() => setCode(value.current.slice(0, -1)), 0);\n    }\n  }, [code]);\n  const copyToClipboard = useCallback(() => {\n    navigator.clipboard.writeText(code);\n  }, [code]);\n\n  return (\n    <div style={toggleTheme.data}>\n      <Outlet context={{ handleChange: handleChange, setFormatter, code }} />\n      <toggleTheme.Form method=\"post\" action=\"/toggleTheme\">\n        <Panel\n          onFormat={handleFormat}\n          onCopyToClipboard={copyToClipboard}\n          reloadDocument={!!toggleTheme.data}\n          busy={toggleTheme.state === \"submitting\"}\n        />\n      </toggleTheme.Form>\n    </div>\n  );\n}\n\ntype CodeFormatterType = {\n  code: string;\n  handleChange: (val: string) => void;\n  setFormatter: (handler: FormatterFunction) => void;\n};\n\nexport function useFormatterOptions() {\n  return useOutletContext<CodeFormatterType>();\n}\n", "import { sql, PostgreSQL } from \"@codemirror/lang-sql\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport useSqlFormatter from \"~/hooks/useSqlFormatter\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"PostgreSQL code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"postgresql\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => sql({ dialect: PostgreSQL }), []);\n  const isReady = useSqlFormatter({\n    language: \"postgresql\",\n    uppercase: true,\n    linesBetweenQueries: 2,\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "// https://reactrouter.com/docs/en/v6/api#outlet\n// https://github.com/uiwjs/react-codemirror/blob/master/website/App.tsx\nimport { useState, useCallback, useRef } from \"react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport { Outlet, useFetcher, useOutletContext } from \"@remix-run/react\";\n\nimport Panel from \"~/components/Panel\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: \"/styles/editor.css\",\n    },\n  ];\n};\n\nexport type FormatterFunction = (text: string) => string;\n\nexport default function Format() {\n  const [code, setCode] = useState(\"\");\n  const value = useRef<string>(\"\");\n  const format = useRef<FormatterFunction>();\n  const toggleTheme = useFetcher<Record<string, string>>();\n\n  const setFormatter = useCallback((func: FormatterFunction) => {\n    format.current = func;\n  }, []);\n  const handleChange = useCallback((input: string) => {\n    value.current = input;\n  }, []);\n  const handleFormat = useCallback(() => {\n    if (!format.current || !value.current || value.current === code) return;\n    value.current = format.current(value.current);\n    if (value.current !== code) setCode(value.current);\n    else {\n      // Edge case: Only formatting was changed (this would not trigger re-render)\n      // Use a dummy value to force update code\n      setCode(value.current + \" \");\n      // Then use delay to immidiately correct it\n      setTimeout(() => setCode(value.current.slice(0, -1)), 0);\n    }\n  }, [code]);\n  const copyToClipboard = useCallback(() => {\n    navigator.clipboard.writeText(code);\n  }, [code]);\n\n  return (\n    <div style={toggleTheme.data}>\n      <Outlet context={{ handleChange: handleChange, setFormatter, code }} />\n      <toggleTheme.Form method=\"post\" action=\"/toggleTheme\">\n        <Panel\n          onFormat={handleFormat}\n          onCopyToClipboard={copyToClipboard}\n          reloadDocument={!!toggleTheme.data}\n          busy={toggleTheme.state === \"submitting\"}\n        />\n      </toggleTheme.Form>\n    </div>\n  );\n}\n\ntype CodeFormatterType = {\n  code: string;\n  handleChange: (val: string) => void;\n  setFormatter: (handler: FormatterFunction) => void;\n};\n\nexport function useFormatterOptions() {\n  return useOutletContext<CodeFormatterType>();\n}\n", "import { useEffect, useState, useCallback } from \"react\";\nimport { format, FormatOptions } from \"sql-formatter\";\nimport { useFormatterOptions } from \"~/routes/lang\";\n\nexport default function useSqlFormatter(options: FormatOptions) {\n  const [mounted, setMounted] = useState(false);\n  const { setFormatter } = useFormatterOptions();\n  const formatter = useCallback(\n    (code: string) => format(code, options),\n    [options]\n  );\n  useEffect(() => {\n    setFormatter(formatter);\n    setMounted(true);\n  }, [setFormatter, formatter, options]);\n\n  return mounted;\n}\n", "import { sql, MariaSQL } from \"@codemirror/lang-sql\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport useSqlFormatter from \"~/hooks/useSqlFormatter\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"MariaDB code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"mariadb\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => sql({ dialect: MariaSQL }), []);\n  const isReady = useSqlFormatter({\n    language: \"mariadb\",\n    uppercase: true,\n    linesBetweenQueries: 2,\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserBabel from \"prettier/parser-babel\";\nimport { json } from \"@codemirror/lang-json\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"JSON5 code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"json5\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => json(), []);\n  const isReady = usePrettier({\n    parser: \"json5\",\n    plugins: [parserBabel],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import { useEffect, useState, useCallback } from \"react\";\nimport { format } from \"prettier/standalone\";\nimport { Options } from \"prettier\";\nimport { useFormatterOptions } from \"~/routes/lang\";\n\nexport default function usePrettier(options: Options) {\n  const [mounted, setMounted] = useState(false);\n  const { setFormatter } = useFormatterOptions();\n  const formatter = useCallback(\n    (code: string) => format(code, options),\n    [options]\n  );\n  useEffect(() => {\n    setFormatter(formatter);\n    setMounted(true);\n  }, [setFormatter, formatter, options]);\n\n  return mounted;\n}\n", "import { sql, MySQL } from \"@codemirror/lang-sql\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport useSqlFormatter from \"~/hooks/useSqlFormatter\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"MySQL code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"mysql\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => sql({ dialect: MySQL }), []);\n  const isReady = useSqlFormatter({\n    language: \"mysql\",\n    uppercase: true,\n    linesBetweenQueries: 2,\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import { sql, PLSQL } from \"@codemirror/lang-sql\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport useSqlFormatter from \"~/hooks/useSqlFormatter\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"PL/SQL code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"plsql\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => sql({ dialect: PLSQL }), []);\n  const isReady = useSqlFormatter({\n    language: \"plsql\",\n    uppercase: true,\n    linesBetweenQueries: 2,\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserHtml from \"prettier/parser-html\";\nimport { html } from \"@codemirror/lang-html\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"HTML code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"html\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => html(), []);\n  const isReady = usePrettier({\n    parser: \"html\",\n    plugins: [parserHtml],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserBabel from \"prettier/parser-babel\";\nimport { json } from \"@codemirror/lang-json\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"JSON code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"json\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => json(), []);\n  const isReady = usePrettier({\n    parser: \"json\",\n    plugins: [parserBabel],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserPostcss from \"prettier/parser-postcss\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { less } from \"@codemirror/legacy-modes/mode/css\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"LESS code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"less\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => StreamLanguage.define(less), []);\n  const isReady = usePrettier({\n    parser: \"less\",\n    plugins: [parserPostcss],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserPostcss from \"prettier/parser-postcss\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { sCSS } from \"@codemirror/legacy-modes/mode/css\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"SCSS code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"sass\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => StreamLanguage.define(sCSS), []);\n  const isReady = usePrettier({\n    parser: \"scss\",\n    plugins: [parserPostcss],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import { sql, MSSQL } from \"@codemirror/lang-sql\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport useSqlFormatter from \"~/hooks/useSqlFormatter\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"TSQL code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"tsql\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => sql({ dialect: MSSQL }), []);\n  const isReady = useSqlFormatter({\n    language: \"tsql\",\n    uppercase: true,\n    linesBetweenQueries: 2,\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserYaml from \"prettier/parser-yaml\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"XML code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"yaml\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => StreamLanguage.define(yaml), []);\n  const isReady = usePrettier({\n    parser: \"yaml\",\n    plugins: [parserYaml],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserPostcss from \"prettier/parser-postcss\";\nimport { css } from \"@codemirror/lang-css\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"CSS code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"css\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => css(), []);\n  const isReady = usePrettier({\n    parser: \"css\",\n    plugins: [parserPostcss],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserGraphql from \"prettier/parser-graphql\";\nimport { json } from \"@codemirror/lang-json\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"GraphQL code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"gql\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => json(), []);\n  const isReady = usePrettier({\n    parser: \"graphql\",\n    plugins: [parserGraphql],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserBabel from \"prettier/parser-babel\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"JSX code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"jsx\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => javascript({ jsx: true }), []);\n  const isReady = usePrettier({\n    parser: \"babel\",\n    plugins: [parserBabel],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserMarkdown from \"prettier/parser-markdown\";\nimport { markdown } from \"@codemirror/lang-markdown\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"MDX code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"mdx\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => markdown(), []);\n  const isReady = usePrettier({\n    parser: \"mdx\",\n    plugins: [parserMarkdown],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import { sql } from \"@codemirror/lang-sql\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport useSqlFormatter from \"~/hooks/useSqlFormatter\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"SQL code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"sql\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => sql(), []);\n  const isReady = useSqlFormatter({\n    uppercase: true,\n    linesBetweenQueries: 2,\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserBabel from \"prettier/parser-babel\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"TSX code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"tsx\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(\n    () => javascript({ jsx: true, typescript: true }),\n    []\n  );\n  const isReady = usePrettier({\n    parser: \"babel\",\n    plugins: [parserBabel],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserXml from \"@prettier/plugin-xml\";\nimport { xml } from \"@codemirror/lang-xml\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"XML code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"xml\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => xml(), []);\n  const isReady = usePrettier({\n    parser: \"xml\",\n    plugins: [parserXml],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserBabel from \"prettier/parser-babel\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"JavaScript code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"js\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => javascript(), []);\n  const isReady = usePrettier({\n    parser: \"babel\",\n    plugins: [parserBabel],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserMarkdown from \"prettier/parser-markdown\";\nimport { markdown } from \"@codemirror/lang-markdown\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Markdown code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"md\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => markdown(), []);\n  const isReady = usePrettier({\n    parser: \"markdown\",\n    plugins: [parserMarkdown],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "import parserTs from \"prettier/parser-typescript\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { useMemo } from \"react\";\nimport { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport CodeEditor from \"~/components/CodeEditor.client\";\nimport { useFormatterOptions } from \"~/routes/lang\";\nimport usePrettier from \"~/hooks/usePrettier\";\nimport { createLanguageManifest } from \"~/lib/meta\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"TypeScript code formatter\",\n  };\n};\n\nexport let links: LinksFunction = () => createLanguageManifest(\"ts\");\n\nexport default function Code() {\n  const { handleChange, code } = useFormatterOptions();\n  const language = useMemo(() => javascript({ typescript: true }), []);\n  const isReady = usePrettier({\n    parser: \"typescript\",\n    plugins: [parserTs],\n  });\n\n  if (!isReady) return null;\n\n  return (\n    <CodeEditor value={code} language={language} onChange={handleChange} />\n  );\n}\n", "export default {'version':'8e357b37','entry':{'module':'/build/entry.client-6NJ5JOLR.js','imports':['/build/_shared/chunk-P3EHMG4H.js','/build/_shared/chunk-NP3V7DD7.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-IG6HJAOG.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-6YL6SPKA.js','imports':['/build/_shared/chunk-M67DB3NT.js','/build/_shared/chunk-FHDY5QCY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang':{'id':'routes/lang','parentId':'root','path':'lang','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang-GL7D3NCH.js','imports':['/build/_shared/chunk-WCDESQWF.js','/build/_shared/chunk-FHDY5QCY.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/css':{'id':'routes/lang/css','parentId':'routes/lang','path':'css','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/css-PK3TBZP4.js','imports':['/build/_shared/chunk-4TQLNS5P.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-3DUVJRIW.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/gql':{'id':'routes/lang/gql','parentId':'routes/lang','path':'gql','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/gql-URZF7GC3.js','imports':['/build/_shared/chunk-KLJIVULB.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/html':{'id':'routes/lang/html','parentId':'routes/lang','path':'html','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/html-TOCCG34E.js','imports':['/build/_shared/chunk-SMXYH56O.js','/build/_shared/chunk-4TQLNS5P.js','/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/js':{'id':'routes/lang/js','parentId':'routes/lang','path':'js','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/js-4KD4AIIH.js','imports':['/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-JBLO76SQ.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/json':{'id':'routes/lang/json','parentId':'routes/lang','path':'json','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/json-2P37SBPI.js','imports':['/build/_shared/chunk-KLJIVULB.js','/build/_shared/chunk-JBLO76SQ.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/json5':{'id':'routes/lang/json5','parentId':'routes/lang','path':'json5','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/json5-KNMA4V2U.js','imports':['/build/_shared/chunk-KLJIVULB.js','/build/_shared/chunk-JBLO76SQ.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/jsx':{'id':'routes/lang/jsx','parentId':'routes/lang','path':'jsx','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/jsx-K7ZZFPTC.js','imports':['/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-JBLO76SQ.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/less':{'id':'routes/lang/less','parentId':'routes/lang','path':'less','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/less-4ICF2KXH.js','imports':['/build/_shared/chunk-RUDI4PA4.js','/build/_shared/chunk-YUDU5XFH.js','/build/_shared/chunk-3DUVJRIW.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/mariadb':{'id':'routes/lang/mariadb','parentId':'routes/lang','path':'mariadb','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/mariadb-H5LFPWDC.js','imports':['/build/_shared/chunk-MH2JZEQ7.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/md':{'id':'routes/lang/md','parentId':'routes/lang','path':'md','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/md-Y4F5VIAX.js','imports':['/build/_shared/chunk-TNKM3YTL.js','/build/_shared/chunk-SMXYH56O.js','/build/_shared/chunk-4TQLNS5P.js','/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/mdx':{'id':'routes/lang/mdx','parentId':'routes/lang','path':'mdx','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/mdx-FUUXCP7Y.js','imports':['/build/_shared/chunk-TNKM3YTL.js','/build/_shared/chunk-SMXYH56O.js','/build/_shared/chunk-4TQLNS5P.js','/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/mysql':{'id':'routes/lang/mysql','parentId':'routes/lang','path':'mysql','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/mysql-DBIWF2G5.js','imports':['/build/_shared/chunk-MH2JZEQ7.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/plsql':{'id':'routes/lang/plsql','parentId':'routes/lang','path':'plsql','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/plsql-3IW5KHRX.js','imports':['/build/_shared/chunk-MH2JZEQ7.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/postgresql':{'id':'routes/lang/postgresql','parentId':'routes/lang','path':'postgresql','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/postgresql-OQT2HW55.js','imports':['/build/_shared/chunk-MH2JZEQ7.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/scss':{'id':'routes/lang/scss','parentId':'routes/lang','path':'scss','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/scss-4AN5WOMN.js','imports':['/build/_shared/chunk-RUDI4PA4.js','/build/_shared/chunk-YUDU5XFH.js','/build/_shared/chunk-3DUVJRIW.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/sql':{'id':'routes/lang/sql','parentId':'routes/lang','path':'sql','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/sql-EKS5XKT5.js','imports':['/build/_shared/chunk-MH2JZEQ7.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/ts':{'id':'routes/lang/ts','parentId':'routes/lang','path':'ts','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/ts-4RXMUMEX.js','imports':['/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/tsql':{'id':'routes/lang/tsql','parentId':'routes/lang','path':'tsql','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/tsql-FQZSDGTI.js','imports':['/build/_shared/chunk-MH2JZEQ7.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/tsx':{'id':'routes/lang/tsx','parentId':'routes/lang','path':'tsx','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/tsx-UJY2K42W.js','imports':['/build/_shared/chunk-VAKVEFWE.js','/build/_shared/chunk-JBLO76SQ.js','/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/xml':{'id':'routes/lang/xml','parentId':'routes/lang','path':'xml','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/xml-EMZEYFSP.js','imports':['/build/_shared/chunk-ENIA23GI.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lang/yaml':{'id':'routes/lang/yaml','parentId':'routes/lang','path':'yaml','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lang/yaml-OYPRAH4K.js','imports':['/build/_shared/chunk-YUDU5XFH.js','/build/_shared/chunk-JRLZLXEJ.js','/build/_shared/chunk-43KWGRPE.js','/build/_shared/chunk-M67DB3NT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/meta/site[.]webmanifest':{'id':'routes/meta/site[.]webmanifest','parentId':'root','path':'meta/site.webmanifest','index':undefined,'caseSensitive':undefined,'module':'/build/routes/meta/site[.]webmanifest-4RXKX7Q4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/styles/editor[.]css':{'id':'routes/styles/editor[.]css','parentId':'root','path':'styles/editor.css','index':undefined,'caseSensitive':undefined,'module':'/build/routes/styles/editor[.]css-RNJRLL3X.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/styles/theme[.]css':{'id':'routes/styles/theme[.]css','parentId':'root','path':'styles/theme.css','index':undefined,'caseSensitive':undefined,'module':'/build/routes/styles/theme[.]css-LWN6UWZC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/toggleTheme':{'id':'routes/toggleTheme','parentId':'root','path':'toggleTheme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/toggleTheme-PDX45VCH.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-8E357B37.js'};"],
  "mappings": "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",
  "names": []
}
